apiVersion: v1
kind: Template
metadata:
  name: monitoring
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    generation: 1
    labels:
      app: grafana
    name: influxdb
  spec:
    replicas: 1
    selector:
      app: influxdb
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: influxdb
      spec:
        containers:
        - image: influxdb
          imagePullPolicy: Always
          name: influxdb
          ports:
          - containerPort: 8086
            name: api
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/influxdb
            name: data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: data
          persistentVolumeClaim:
            claimName: influxdb
    test: false
    triggers:
    - type: ConfigChange
    
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    generation: 1
    labels:
      app: grafana
    name: grafana
  spec:
    replicas: 1
    selector:
      app: grafana
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: grafana
      spec:
        containers:
        - image: docker-registry.default.svc:5000/${PROJECT}/grafana
          imagePullPolicy: Always
          name: grafana
          ports:
          - containerPort: 3000
            name: api
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/share/grafana/data
            name: data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: data
          persistentVolumeClaim:
            claimName: grafana
    test: false
    triggers:
    - type: ConfigChange
    
- apiVersion: v1
  kind: Route
  metadata:
    name: grafana
  spec:
    host: grafana-${PROJECT}.${DOMAIN}
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: grafana
      weight: 100
    wildcardPolicy: None
      
- apiVersion: v1
  kind: Service
  metadata:
    name: influxdb
  spec:
    ports:
    - port: 8086
      protocol: TCP
      targetPort: api
    selector:
      app: influxdb
    sessionAffinity: None
    type: ClusterIP
    
- apiVersion: v1
  kind: Service
  metadata:
    name: grafana
  spec:
    ports:
    - port: 80
      protocol: TCP
      targetPort: api
    selector:
      app: grafana
    sessionAffinity: None
    type: ClusterIP

parameters:
- name: PROJECT
- name: DOMAIN
